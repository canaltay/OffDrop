//
//  Extensions.swift
//  OffDrop
//
//  Created by Utku Kaan GÃ¼lsoy on 30.07.2025.
//

import MultipeerConnectivity

// Oturumla ilgili olaylar
extension MPCManager: MCSessionDelegate {
    
    // Cihaz baÄŸlantÄ± durumu deÄŸiÅŸtiÄŸinde tetiklenir (baÄŸlandÄ±, koptu vs.)
    func session(_ session: MCSession, peer peerID: MCPeerID, didChange state: MCSessionState) {
        let status: String
        switch state {
        case .connected:
            status = "baÄŸlandÄ± "
        case .connecting:
            status = "baÄŸlanÄ±yor..."
        case .notConnected:
            status = "baÄŸlantÄ± kesildi "
        @unknown default:
            status = "bilinmeyen durum"
        }
        print("ğŸ“¡ Cihaz '\(peerID.displayName)' \(status)")
    }
    
    // Veri alÄ±ndÄ±ÄŸÄ±nda tetiklenir (mesaj geldi)
    func session(_ session: MCSession, didReceive data: Data, fromPeer peerID: MCPeerID) {
        guard let message = String(data: data, encoding: .utf8) else {
            print(" Gelen veri Ã§Ã¶zÃ¼mlenemedi.")
            return
        }
        print("Mesaj alÄ±ndÄ± (\(peerID.displayName)): '\(message)'")
        onMessageReceived?(peerID.displayName, message)
    }

    // DiÄŸer 3 fonksiyon ÅŸu an kullanÄ±lmadÄ±ÄŸÄ± iÃ§in boÅŸ bÄ±rakÄ±ldÄ±
    func session(_ session: MCSession, didReceive stream: InputStream, withName streamName: String, fromPeer peerID: MCPeerID) {}
    func session(_ session: MCSession, didStartReceivingResourceWithName resourceName: String, fromPeer peerID: MCPeerID, with progress: Progress) {}
    func session(_ session: MCSession, didFinishReceivingResourceWithName resourceName: String, fromPeer peerID: MCPeerID, at localURL: URL?, withError error: Error?) {}
}

// YayÄ±ncÄ± delegate: BaÅŸka bir cihaz baÄŸlanmak istediÄŸinde tetiklenir
extension MPCManager: MCNearbyServiceAdvertiserDelegate {
    
    // DiÄŸer cihaz baÄŸlantÄ± isteÄŸi gÃ¶nderirse, biz kabul ederiz
    func advertiser(_ advertiser: MCNearbyServiceAdvertiser, didReceiveInvitationFromPeer peerID: MCPeerID,
                    withContext context: Data?, invitationHandler: @escaping (Bool, MCSession?) -> Void) {
        print("'\(peerID.displayName)' baÄŸlantÄ± istiyor. Kabul ediliyor...")
        invitationHandler(true, session)
    }
}

// TarayÄ±cÄ± delegate: YakÄ±nda bir cihaz bulunduÄŸunda tetiklenir
extension MPCManager: MCNearbyServiceBrowserDelegate {
    
    // Yeni bir cihaz bulunduÄŸunda baÄŸlantÄ± isteÄŸi gÃ¶nderilir
    func browser(_ browser: MCNearbyServiceBrowser, foundPeer peerID: MCPeerID,
                 withDiscoveryInfo info: [String : String]?) {
        print("ğŸ‘€ Yeni cihaz bulundu: '\(peerID.displayName)' â€” BaÄŸlanÄ±lÄ±yor...")
        browser.invitePeer(peerID, to: session, withContext: nil, timeout: 10)
    }

    // BaÄŸlantÄ±dan Ã§Ä±kan cihazlar burada raporlanÄ±r
    func browser(_ browser: MCNearbyServiceBrowser, lostPeer peerID: MCPeerID) {
        print("Cihaz kayboldu: '\(peerID.displayName)'")
    }
}
